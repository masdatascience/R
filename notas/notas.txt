OBSERVACIÓN 3

##################################################

COMENTARIOS SOBRE GIT HUB

##################################################

1. Excelente avance, se nota que dejaste que alguien más no técnico lo leyera. Importante carlos la ortografica, que en ese puntos finos no se nos desvie la gente
2. ¿se pueden agrupar el taller 2?  , yo veo que si, con el mismo objetivo que lo hice con el 1 , para que sea mas facil que las personas capten que estan avanzando y no vean una biblia adelante. 
3. Listas las actualizaciones , cada vez que uses el # no pueden quedar pegados porque no se visualiza, le adicione tambien saltos de linea para facilitar la lectura, mañana te lo muestro


------ CODIGO TALLER 2 PARA MODIFICARSE
# TALLER 2 

Informe de las ventas por sus clientes y artículos en sus diferentes países


![](https://github.com/masdatascience/R/blob/master/Imagenes/PBI/Resultados_Taller_2.PNG?raw=true)

## 1. Creación de premisas a nivel de datos y de metadatos

__1.1. Cambiar Nombres a las tablas__ 
Esto se hace en modo __diseño__, donde se visualizan las tablas al costado derecho de la herramienta, allí se da clic derecho sobre cada una de las tablas, clic en __Renombrar__, se colocan nombres como: Clientes, Productos, Ventas, Promociones, Países y Fechas

__1.2. Crear relación entre las tablas__
Se da clic en la pestaña de relaciones y se eliminan las lineas que realizan las uniones entre las  tablas, luego el modelo que se crea es un modelo estrella, en donde la tabla Ventas, queda rodeada de las otras tablas y se unen con su llave única, es decir, Productos y Ventas se unen por el campo __Llave del producto__, Clientes y Ventas se unen por el campo __llave del clientes__, Países y Ventas se unen por el campo __Llave del territorio de ventas__, Promociones y Ventas se unen por el campo __llave de Promociones__ y por ultimo se une la tabla de Fechas con Ventas por el campo __llave de fecha__

__1.3. Integrar el nombre y el apellido del cliente__
Para esto se ingresa a la opción de edición de consultas, se da clic en la tabla de los clientes que se encuentra en el listado de la parte izquierda, luego de los datos que se visualicen se resaltan las columnas correspondientes a __Primer Nombre__ y __Apellido__, luego se da clic en la parte superior en __Agregar Columnas__, para finalizar clic en __Mezclar columnas__. De esta forma se observa una columna al final con los valores integrados. Para que los cambios se guarden, se debe dar clic en __inicio__ luego en __Cerrar y Aplicar__; de esta forma la columna queda lista para usarse en la construcción de los reportes

__1.4. Creación de tabla Indicadores__
Esta se crea dando clic en __Modelando__ luego clic en __Agregar Tabla__, esta tabla se visualizará en modo diseño, en la parte derecha, con las tablas previamente cargadas, su objetivo es tener almacenadas las formulaciones requeridas

__1.5. Creación de formulas__ 
Para sumar las cantidades vendidas, se da clic derecho sobre la tabla Indicadores y clic en __nueva métrica__, aquí se coloca como nombre __quantity__ y su operación es __sum(Ventas[OrderQuantity])__, enter
Para sumar las ventas valorizadas, mismo proceso de __nueva metrica__, el nombre es __sales__ y su operación es __sum(Ventas[SalesAmount])__, enter
Para sumar los costos, __nueva métrica__, el nombre es __cost__ y su operación es sum(Ventas[TotalProductCost]), enter
Para calcular el margen, __nueva métrica__, el nombre es __margin__ y su operación es ([sales]-[cost]) / [sales]

__1.6. Formato de las formulas__
Cantidad, venta y costo se definen como numero entero, para esto se debe resaltar cada una de esta formulas, clic en __Modelando__ del menu, luego clic en la opción de Formato, se escoge __número entero__, sin decimales y clic en el separador de miles.
Margen se define como un decimal, misma ruta, se selecciona __porcentaje__ y se coloca un decimal

__1.7. Filtro de Promociones__ 
En modo diseño, se arrastra el visualizador __Slicer__ al lienzo en blanco, luego de la tabla de Promociones, se arrastra el campo llamado __nombre promoción en ingles__, a la opción celda de los parámetros que se encuentran en la parte inferior de los visualizadores

__1.8. Filtro de Años__
Mismo proceso anterior con el __Slicer__, el campo que se arrastra es el de la __fecha de la orden__ de la tabla Ventas __(Ventas[orderdate])__

__1.9. Filtro de Estado Civil__
Mismo proceso con el __Slicer__, el campo que se arrastra es __(Clientes[maritalstatus])__, de la tabla Clientes

__1.10. Filtro de Numero de Hijos__
Mismo proceso con el __Slicer__, el campo que se arrastra es __(Clientes[totalchildren])__, de la tabla Clientes

__1.11. Tacómetro para el Análisis del Margen__
Se arrastra al lienzo, el visualizador llamado __Gauge__, luego de la tabla Indicadores se arrastra la formula del Margen al campo Valor de los parámetros

__1.12. Gráfico de Lineas para Analizar la demanda de las bicicletas por color y el género de los clientes__
Se arrastra al lienzo, el visualizador llamado __Line chart__, definiéndose así: Axis=(productos[color]), Legend=(clientes[gender]) y en Values=(indicadores[sales])

__1.13. Gráfico de Dispersión para evaluar la venta por país, haciendo relación entre el costo, la venta y el margen__
Se arrastra al lienzo, el visualizador llamado __Scatter chart__, parametrizandose de la siguiente forma: Legend=(paises[salesterritorycountry]), X Axis= (indicadores[margin]), Y Axis= (indicadores[sales]) y en Size=(indicadores[cost])
En la opción de __Analitica__, se habilita una linea constante con un valor de 0.409 para el eje X (valor porcentaje mínimo de rentabilidad); se habilita una linea constante en el eje Y con un valor de 1500000 (valor de venta minima)

__1.14. Gráfico de Concentración de las ventas por nivel de Educación y Ocupación de los clientes__
Se arrastra al lienzo, el visualizador llamado __Treemap__, definiéndose así: group=(clientes[englisheducation]) y debajo de este campo se arrastra (clientes[englishoccupation]); Value=(indicadores[sales])
Este gráfico permite hacer drill down, primero sobre el nivel educativo y dentro de este que ocupación tienen los clientes

__1.15. Gráfico de Torta para analizar las ventas por ocupación__
Se arrastra al lienzo, el visualizador llamado __pie char__, definiéndose así: (clientes[englishoccupation]) y Value=(indicadores[sales])

__1.16. Gráfico de barras para analizar la tendencia del margen periódicamente__
Se arrastra al lienzo, el visualizador llamado __lined and clustered column chart__, definiéndose así: Shared Axis:(ventas(dateorder)), Column Values=(indicadores[sales]) y Line Values=(indicadores[margin])

__1.17. Matriz Navegable para analizar las ventas y su margen desde el país hasta el articulo vendido__
Se arrastra al lienzo, el visualizador llamado __matrix__, definiéndose así: Rows=(paises[salesterritorycountry]), (clientes[name full]) y (productos[englishproductname]); Values=(indicadores[quantity]),(indicadores[sales]),(indicadores[cost]) y (indicadores[margin])
Esta matriz en la parte superior tiene las opciones de navegación desde el país, cliente llegando al producto o viceversa

__1.18. Gráfico para analizar el centro y la dispersión de la venta por países, de acuerdo al numero de hijos de los clientes__
Se arrastra al lienzo, el visualizador llamado __box and whisker__, definiéndose así: Axis=(paises[salesterritorycountry]) ; Axis Category I=(clientes[totalchildren]) y Values=(indicadores[ventas]) 


*Nota: Cada visualizador permite configurar sus fuentes, sus formatos y sus colores, en la pestaña llamada __Formato__*


---




OBSERVACIÓN 2

##################################################

COMENTARIOS SOBRE GIT HUB

##################################################

1. Revisar resultado final : https://github.com/masdatascience/pbi/wiki/Taller-1----Nuestro-primer-Dashboard vs lo enviado. Con el objetivo de documentar de la misma forma, si se neceista el codigo de lo documentado es el siguiente https://github.com/masdatascience/R/raw/master/notas/codigo_fuente.txt
De este primer taller basico es necesario describir como generan los objetos , donde se colocan los campos, etc. , ya que me toco en vivo decirles esto .
Esto se aplique a los demas github.
2.Para el taller avanzado , cambiar el nombre de las tablas a unas tablas que se entiendan en español y que  se apliquen para los demás 
3.Es necesario indicar como se utilizan los campos en r, en donde deben posicionarse y alertarlos que si no tienen instaladas las librerias, es necesario identificar cual es el motor de R e ir alla a instalarlas
4.Es necesario tambien indicarles los formatos y como se utilizan , y que cada formato de los objetos es diferente
5.adicionar las imagenes que se requieran e invocarlas como se hizo en el taller 1 
![](https://raw.githubusercontent.com/masdatascience/R/master/Imagenes/PBI/resultado_taller_1.PNG)
6. te dejo los enlaces para que veas como se ven en este momento:

Taller 1 (El de referencia) https://github.com/masdatascience/pbi/wiki/Taller-1----Nuestro-primer-Dashboard
Taller 2  https://github.com/masdatascience/pbi/wiki/Taller-2---Modelo-m%C3%A1s-completo
Taller 3 https://github.com/masdatascience/pbi/wiki/Taller-3---Correlacoiones-y-clustering
Taller 4


7. Partiria el taller 3 en varios para asegurar los cluster, decisiones, y entender como es el tema

OBSERVACION 1

##################################################

COMENTARIOS SOBRE GIT HUB

##################################################

1.Generales , seguir la numeración, por ejemplo si estan en la sección 3 , no es necesario escribir 1.1 sino 3.1
2. Agregaria un punto 0. que es en el visor de SQL server management studio que se conecten e idncarles a que base de datos se coenctaran
-----
3. He creado este espacio de trabajo, por favor trabajar alli https://1drv.ms/f/s!AkMQSLAMTlFglg7db8wYzX5H8bX5 para que estemos alineados más rapidamente


##TALLER 1: 

###1.IDENTIFICACION DE LAS TABLAS	
1.1 Adicional al final la clave

###2.DISEÑO DE REPORTES
1.2 ¿cuales tablas?, seria tambien interesante adicionarles una vista solo para que entienda el concepto , ese lo explico yo, pero detallar que tablas
1.4 ¿cual es el campo de la venta valorizada?, detallarlo asi ,
__1.4.Crear una Matriz que permita visualizar la venta valorizada [nombre de campo] de los clientes[tabla] en sus respectivos paises [campo]__
Mismo punto para los siguientee 1.5 al 1.9 

Adicionaste ujna nota, podrias colocar como recomendación: y describir como se puede usar, si esto se usa mas adelante, describi como se puede usar y decir tambien que se cubrira mas adelante


##TALLER 2: MODELAMIENTO AVANZADO DE LAS VENTAS POR CLIENTE, ARTICULO Y SU UBICACION GEOGRAFICA

mismo para todos, nombre de talbas y campos usados, detalle de formulas logicas , pro ejemplo A + B + C , no Campo.A + campo.B + campo.C


###2.DISEÑO DE REPORTES Y METRICAS
1. Se creará en modeling, nueva tabla


Muy importante hablarles en dAX, muy importante integrar temas que sabes que son muy improtantes para nosotros como :
1. TOTALYTD() 
2. Calculos con variables, por ejemplo cuando la variable es dinamica como hemos hecho con RAF
3. sumatorias por subconjuntos de datos especificos, como lo hiciste la ultima vez con el pbix que te di de sumar solo proyectos, requerimientos, etc. 
4. en pocas palabras, plasmar con tu experiencia cuales son los comandos en DAX mas usados


##################################################

modelo 1 de PBIX

##################################################


Basicamente los comentarios tambien afectan al lo anterior descrito.

1. Adicionar valores en graficas
2. Adicionar 0 en vez de nulos, para que las gente entienda eso
3. Filtrar filas con nulos, idem 2 
4. Cambiar nombres en las tablas para que esten en español
5. Adicionar un filtro en la hoja detalle
6. dEscribir o hacer que ellos hagan el modelo entidad relacion , que no lo migren directo
7. Describirles que ordenen los datos tambien 

##################################################

modelo avanzado de PBIX

##################################################


1.  Adicionar diferentes tipos de filtros
2.  Asegurar que los nombres de las tablas y los indicadores que tengan el mismo nombre por ejemplo ventar vs margen , y los indicadores dicen Sales , Margin
3. tratar que tengan o todos mayusculas o al menos la primera maysuculas
4. Adicionar visualizaciones de mapas , pie/donut chart
5. Los titulos siempre encima del grafico , no debajo 
---
6. Adicionar barra horizontal tambine en el grafico de de dispesión 
7. Colocar el titulo mismo tamaño mismo fondo , mismo color en todas las graficas, si es necesario agrandar el tamaño de power bi horizontal sin problemas
8. Agregar en la tabla o grafico que se pueda saltar a un nivel de detalle, de tal forma que haga uso del tema de los bookmarks
9. Agregar varios tipos de filtros, par aque se entienda las opciones que hay
10. Revisa este enlace https://community.powerbi.com/t5/Data-Stories-Gallery/bd-p/DataStoriesGallery como referencia de visualizaciones interesantes

##################################################

CORRELACIONES / DECISION TREE

##################################################

Adicionar en github las librerias que se utilizan en R para que funcione, p . ej. corrplot
Mantener estandar, titulos, detalle de la data, etc. 
 
1. Correlaciones _
1.¿por que no se usa la base de datos? sino un archivo CSV , cual seria el select en la base de datos para este archivo?
2. me gusta el analisis, en donde no aplica la correlacion, la pregunta es , en donde si aplica? se necesitaria tambine un ejemplo al respecto y entender que se puede hacer con la correlacion una vez aplicada como es la prediccion con base en un modelo de regresión, guiate por el html que te envie de regresion lineal alli lo explican muy bien. Esto lo puedes describir en el archivo de git hub como objetivo de los analisis que se haran para correlación, donde no se detecta que no es necesaario aplicar descuentos por correlacion, y ahora que identiifcamos una correlación por ejemmplo sales vs margen se puede hacer una predicción, etc. 


2- Arbol de decision
Se ve muy interesante l o descrito , por favor generar un modelo más de analisis de arboles como distribución de compra demografico por genero o por tipo de producto, basicamente para asegurar que se entienda el concepto.

Carlos por favor adicionar tambien el punto de clustering, en donde basicamente te explico paso a paso a continuación copmo ussarlo
# vamos a utilizar el dataset de flores, por ende se asigna la variable
flores <- iris
ggplot(flores, aes(Petal.Length, Petal.Width, color = Species)) + geom_point()

# Ahora vamos a utilizar clustering , por ende son 3 especies, generemos un agrupacion por alli
set.seed(0)
# genero mi cluster
flores_clustering <- kmeans(flores[, 1:4], 3, nstart = 30) 
# me compare la información que clasifica contra la real , simplemente es una validación 
# obtengo falsos positivos 
table(flores_clustering$cluster, flores$Species)

# ahora miremos como agrupo con la libreria especifica para agrupacion de clusters 
library(cluster) 
clusplot(iris, irisCluster$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )

